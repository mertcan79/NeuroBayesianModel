{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 HelveticaNeue-Italic;
\f3\fnil\fcharset0 Menlo-Regular;\f4\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;\red111\green111\blue111;
\red55\green106\blue231;\red234\green233\blue255;\red67\green67\blue67;\red17\green137\blue135;\red210\green0\blue53;
\red135\green135\blue135;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c100000\c100000\c100000;\cssrgb\c50980\c50980\c50980;
\cssrgb\c27059\c50980\c92549;\cssrgb\c93333\c93333\c100000;\cssrgb\c33333\c33333\c33333;\cssrgb\c0\c60000\c60000;\cssrgb\c86667\c6667\c26667;
\cssrgb\c60000\c60000\c60000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl1640\sa220\partightenfactor0

\f0\b\fs82 \cf2 \cb3 \expnd0\expndtw0\kerning0
\ul \ulc2 \outl0\strokewidth0 \strokec2 Sensitivity Analysis\cb1 \
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf4 \ulnone \strokec4 \
\pard\pardeftab720\sa400\partightenfactor0
\cf2 \cb3 \strokec2 Sensitivity analysis is the study of how the variations in the outputs of a system can be assigned to different sources of variation in its inputs.\cb1 \
\cb3 Understanding the variance of the outputs of a system in terms of the contributions of the inputs is a key aspect of uncertainty quantification: it helps to test the robustness of a system, design strategies for uncertainty reduction and helps to calibrate physical models to the real world by improving their interpretability.\cb1 \
\cb3 Sensitivity analysis methods are divided into two main classes:\'a0
\f2\i local
\f1\i0 \'a0methods, where changes in the output are studied for specific values of the inputs, and\'a0
\f2\i global
\f1\i0 \'a0methods where the total variability of the outputs is assigned to each input variable. Given a physical model of a system, for instance a climate model simulator, local sensitivity analysis is carried out using gradients. However, if the physical model is expensive-to-evaluate approximating gradients becomes intractable. Using an emulator of the physical model, like a Gaussian process, and using its analytic gradients is an effective alternative.\cb1 \
\cb3 A similar situation arises when doing global sensitivity analysis. The core element in global sensitivity analysis are the Sobol indices, also called\'a0
\f2\i main effects
\f1\i0 \'a0[{\field{\*\fldinst{HYPERLINK "https://emukit.github.io/sensitivity-analysis/#references-on-sensitivity-analysis"}}{\fldrslt \cf5 \strokec5 1,2}}]. They are a measure of \'93first order sensitivity\'94 of each input variable. They account for the proportion of variance of the output explained by changing each variable alone while marginalizing over the rest. The\'a0
\f2\i total effects
\f1\i0 \'a0are also common [{\field{\*\fldinst{HYPERLINK "https://emukit.github.io/sensitivity-analysis/#references-on-sensitivity-analysis"}}{\fldrslt \cf5 \strokec5 3}}]. They account for the contribution to the output variance of each variable but including all variance caused by the variable alone and all its interactions of any order of the inputs. Both indices can be easily computed in Emukit.\cb1 \
\cb3 To illustrate how to do global sensitivity analysis of a simulator we use the\'a0{\field{\*\fldinst{HYPERLINK "https://www.sfu.ca/~ssurjano/ishigami.html"}}{\fldrslt \cf5 \strokec5 Ishigami function}}. This function has three continuous inputs and depends on two parameters that we fix in this example.\cb1 \
\pard\pardeftab720\sl420\partightenfactor0

\f3\fs30 \cf2 \cb6 from \cf7 \strokec7 emukit.test_functions.sensitivity\cf2 \strokec2  import Ishigami\
\
ishigami 
\f4\b =
\f3\b0  Ishigami(a
\f4\b =
\f3\b0 \cf8 \strokec8 5\cf2 \strokec2 , b
\f4\b =
\f3\b0 \cf8 \strokec8 0.1\cf2 \strokec2 )\
target_simulator 
\f4\b =
\f3\b0  ishigami.fidelity1\
\pard\pardeftab720\sa400\partightenfactor0

\f1\fs32 \cf2 \cb3 Emukit allows to compute both the main and total effects using Monte Carlo with the Saltelli estimators [{\field{\*\fldinst{HYPERLINK "https://emukit.github.io/sensitivity-analysis/#references-on-sensitivity-analysis"}}{\fldrslt \cf5 \strokec5 4}}]. Instead of computing the indices by calling the simulator, we learn an emulator first and we compute the indices using\'a0
\f2\i cheap
\f1\i0 \'a0calls to this model. We first define the parameter space:\cb1 \
\pard\pardeftab720\sl420\partightenfactor0

\f3\fs30 \cf2 \cb6 import \cf7 \strokec7 numpy\cf2 \strokec2  
\f4\b as
\f3\b0  np\
from \cf7 \strokec7 emukit.core\cf2 \strokec2  import ContinuousParameter, ParameterSpace\
\
space 
\f4\b =
\f3\b0  ParameterSpace([ContinuousParameter(\cf9 \strokec9 'x1'\cf2 \strokec2 , 
\f4\b -
\f3\b0 np.pi, np.pi),\
                        ContinuousParameter(\cf9 \strokec9 'x2'\cf2 \strokec2 , 
\f4\b -
\f3\b0 np.pi, np.pi),\
                        ContinuousParameter(\cf9 \strokec9 'x3'\cf2 \strokec2 , 
\f4\b -
\f3\b0 np.pi, np.pi)])\
\pard\pardeftab720\sa400\partightenfactor0

\f1\fs32 \cf2 \cb3 Now we generate a data set by evaluating the simulator on 500 random samples in the input domain:\cb1 \
\pard\pardeftab720\sl420\partightenfactor0

\f3\fs30 \cf2 \cb6 from \cf7 \strokec7 emukit.experimental_design.model_free.random_design\cf2 \strokec2  import RandomDesign\
desing 
\f4\b =
\f3\b0  RandomDesign(space)\
X 
\f4\b =
\f3\b0  desing.get_samples(\cf8 \strokec8 500\cf2 \strokec2 )\
Y  
\f4\b =
\f3\b0  ishigami.target_simulator(X)[:,\cf10 \strokec10 None\cf2 \strokec2 ]\
\pard\pardeftab720\sa400\partightenfactor0

\f1\fs32 \cf2 \cb3 And we wrap and fit a Gaussian process to the inputs and outputs of the simulator.\cb1 \
\pard\pardeftab720\sl420\partightenfactor0

\f3\fs30 \cf2 \cb6 from \cf7 \strokec7 GPy.models\cf2 \strokec2  import GPRegression\
from \cf7 \strokec7 emukit.model_wrappers\cf2 \strokec2  import GPyModelWrapper\
\
model_gpy 
\f4\b =
\f3\b0  GPRegression(X,Y)\
model_emukit 
\f4\b =
\f3\b0  GPyModelWrapper(model_gpy)\
model_emukit.optimize()\
\pard\pardeftab720\sa400\partightenfactor0

\f1\fs32 \cf2 \cb3 We are now ready to compute the sensitivity indices. It is as simple as running:\cb1 \
\pard\pardeftab720\sl420\partightenfactor0

\f3\fs30 \cf2 \cb6 from \cf7 \strokec7 emukit.sensitivity.monte_carlo\cf2 \strokec2  import MonteCarloSensitivity\
\
senstivity 
\f4\b =
\f3\b0  MonteCarloSensitivity(model 
\f4\b =
\f3\b0  model_emukit, input_domain 
\f4\b =
\f3\b0  space)\
main_effects, total_effects, _ 
\f4\b =
\f3\b0  senstivity.compute_effects(num_monte_carlo_points 
\f4\b =
\f3\b0  \cf8 \strokec8 10000\cf2 \strokec2 )\
\pard\pardeftab720\sa400\partightenfactor0

\f1\fs32 \cf2 \cb3 And that\'92s it! You can check the computed main and total effects. Note that although we have used a Gaussian process here, the coefficients are computed running Monte Carlo, which means that any model can be wrapped here.\cb1 \
\cb3 Check our list of\'a0{\field{\*\fldinst{HYPERLINK "http://nbviewer.jupyter.org/github/emukit/emukit/blob/main/notebooks/index.ipynb"}}{\fldrslt \cf5 \strokec5 notebooks}}\'a0and\'a0{\field{\*\fldinst{HYPERLINK "https://github.com/emukit/emukit/tree/main/emukit/examples"}}{\fldrslt \cf5 \strokec5 examples}}\'a0if you want to learn more about how to do sensitivity analysis and other methods with Emukit. You can also check the Emukit\'a0{\field{\*\fldinst{HYPERLINK "https://emukit.readthedocs.io/en/latest/"}}{\fldrslt \cf5 \strokec5 documentation}}.\cb1 \
\cb3 We\'92re always open to contributions! Please read our\'a0{\field{\*\fldinst{HYPERLINK "https://github.com/emukit/emukit/blob/main/CONTRIBUTING.md"}}{\fldrslt \cf5 \strokec5 contribution guidelines}}\'a0for more information. We are particularly interested in contributions regarding examples and tutorials.\cb1 \
\pard\pardeftab720\sl440\sa220\partightenfactor0

\f0\b\fs40 \cf2 \cb3 References on sensitivity analysis\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f1\b0\fs32 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [1] Sobol, I. M. (2001),\'a0{\field{\*\fldinst{HYPERLINK "https://www.sciencedirect.com/science/article/abs/pii/S0378475400002706"}}{\fldrslt \cf5 \strokec5 Global sensitivity indices for nonlinear mathematical models and their Monte Carlo estimates}}.\'a0
\f2\i Math Comput. Simulat.
\f1\i0 , 55(1\'963),271-280, 2001\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [2] Sobol\'92, I. M (1990).\'a0{\field{\*\fldinst{HYPERLINK "http://max2.ese.u-psud.fr/epc/conservation/MODE/Sobol%20Original%20Paper.pdf"}}{\fldrslt \cf5 \strokec5 Sensitivity estimates for nonlinear mathematical models}}.\'a0
\f2\i Matematicheskoe Modelirovanie
\f1\i0 \'a02, 112\'96118. in Russian, translated in English in Sobol\'92 , I., 2001.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [3] Andrea Saltelli, Paola Annoni, Ivano Azzini, Francesca Campolongo, Marco Ratto, and Stefano Tarantola. (2010)\'a0{\field{\*\fldinst{HYPERLINK "https://www.sciencedirect.com/science/article/pii/S0010465509003087"}}{\fldrslt \cf5 \strokec5 Variance based sensitivity analysis of model output}}. Design and estimator for the total sensitivity index.\'a0
\f2\i Computer Physics Communications
\f1\i0 , 181(2):259-270, 2010.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [4] Kennedy, M.C. and O\'92Hagan, A., (2000).\'a0{\field{\*\fldinst{HYPERLINK "https://www.jstor.org/stable/2673557"}}{\fldrslt \cf5 \strokec5 Predicting the output from a complex computer code when fast approximations are available}}.\'a0
\f2\i Biometrika
\f1\i0 , 87(1), pp.1-13, 2000.\cb1 \
}